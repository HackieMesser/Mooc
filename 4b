#part04-02_line

def  line(a: int, b: str):
    index=0
    x=""
    while index<a:
    #for x in a:
        if b!= "":
             x+=(str(b[0]))
        else:
            x+=("*")
        index+=1 
    print(x)   
if __name__ == "__main__":
    line(4,"")
#another way
def  line(a: int, b: str):
    
    #while index<a:
  
    if b!= "":
        x=(str(b[0]))
    else:
        x=("*")
    print(x*a)   
if __name__ == "__main__":
    line(4,"")

#box of hashes
def  line(a: int, b: str):
    
    #while index<a:
  
    if b!= "":
        x=(str(b[0]))
    else:
        x=("*")
    print(x*10)   
def box_of_hashes(height):
    index=0
    while index < height:
        line(height,"#")   
        index+=1
# You can test your function by calling it within the following block
if __name__ == "__main__":
    box_of_hashes(5)

#box of hashes
def  line(a: int, b: str):
    
    #while index<a:
  
    if b!= "":
        x=(str(b[0]))
    else:
        x=("*")
    print(x*b)   
def box_of_hashes(height):
    index=0
    while index < height:
        line(10,"#")   
        index+=1
# You can test your function by calling it within the following block
if __name__ == "__main__":
    box_of_hashes(5)

#square of hashes

def  line(a: int, b: str):
      
    if b!= "":
        x=(str(b[0]))
    else:
        x=("*")
    print(x*a)   
def  square_of_hashes(size):
    index=0
    while index<size:
        line(size, "#")
        index+=1


# You can test your function by calling it within the following block
if __name__ == "__main__":
    square_of_hashes(5)


#square
def  line(a: int, b: str):
      
    if b!= "":
        x=(str(b[0]))
    else:
        x=("*")
    print(x*a)   
def  square_of_hashes(size):
    index=0
    while index<size:
        line(size, "#")
        index+=1


# You can test your function by calling it within the following block
if __name__ == "__main__":
    square_of_hashes(5)
#triangle
def  line(a: int, b: str):
      
    if b!= "":
        x=(str(b[0]))
    else:
        x=("*")
    print(x*a)   
def triangle(size):
    x=1
    while x<=size:
        line(x, "#")
        x+=1
#shape
def  line(a: int, b: str):
      
    if b!= "":
        x=(str(b[0]))
    else:
        x=("*")
    print(x*a)
def triangle(a,b):
    x=1
    while x<=a:
        line(x, b)
        x+=1
def square(a,c,d):
    index=0
    while index<c:
        line(a, d)
        index+=1
def shape(a,b,c,d):
    triangle(a,b)
    square(a,c,d)         
if __name__ == "__main__":
    shape(5, "x", 2, "o")

#spruce
#works better
def spruce(c: int):
    print("a spruce!")
    index=0
    stars='*'
    while index<c:
        print(" "*(c-index-1)+(stars))
        index+=1
        stars+="**"
    print(" "*(c-1)+"*")


if __name__ == "__main__":
    spruce(5)
    
    
