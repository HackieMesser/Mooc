def letter_square(layers:int):
    length=(layers*2)-1
    flip=length//2
    matrix=[]
    letters=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]
    print(matrix)
    index=0
    starting_letter=layers-1
    for i in range(0,length):
        matrix.append([])
        for x in range(0,length):
            matrix[i].append(letters[starting_letter])
        for let in range(index,length-index):
            matrix[i][let].replace("C","22")
        index+=1
        

            

    print(matrix)
        

if __name__ == "__main__":
    layers =3
    letter_square(layers)


def letter_square(layers:int):
    length=(layers*2)-1
    flip=length//2
    matrix=[]
    letters=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]
    print(matrix)
    index=0
    subindex=0
    starting_letter=layers-1
    for i in range(0,length):
        matrix.append([])
        for x in range(0,length):
            matrix[i].append(letters[starting_letter])
    print(matrix[flip+1][flip+1])
    matrix[flip][flip]=matrix[flip][flip].replace("C","A")
    print(matrix[flip][flip])
        

            

    print(matrix)
        

if __name__ == "__main__":
    layers =3
    letter_square(layers)


def letter_square(layers:int):
    length=(layers*2)-1
    flip=length//2
    matrix=[]
    letters=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]
    print(matrix)
    index=0
    subindex=0
    starting_letter=layers-1
    for i in range(0,length):
        matrix.append([])
        for x in range(0,length):
            matrix[i].append(letters[starting_letter])
    startindex=0
    i=1
    aheadindex=1
    for b in range(1, length -1):
        startindex=0
        i=1
        aheadindex=1
        for x in range(aheadindex,length-aheadindex):
            matrix[b][x]=matrix[b][x].replace(letters[starting_letter-startindex],letters[starting_letter-aheadindex])
            i+=1
            startindex+=1
            aheadindex+=1
        

    
        index+=1
        

            

    print(matrix)
if __name__ == "__main__":
    layers =3
    letter_square(layers)



#most recent        
def letter_square(layers:int):
    length=(layers*2)-1
    flip=length//2
    matrix=[]
    letters=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]
    print(matrix)
    index=0
    subindex=0
    starting_letter=layers-1
    for i in range(0,length):
        matrix.append([])
        for x in range(0,length):
            matrix[i].append(letters[starting_letter])
    startindex=0
    i=1
    aheadindex=1
    for b in range(1, length -1):
        startindex=0
        i=1
        aheadindex=1
        for x in range(1,length-1):
            matrix[b][x]=matrix[b][x].replace(letters[starting_letter],letters[starting_letter-1])
            i+=1
            startindex+=1
            aheadindex+=1
        

    
        index+=1
        

            

    print(matrix)
if __name__ == "__main__":
    layers =3
    letter_square(layers)
        


def letter_square(layers:int):
    length=(layers*2)-1
    flip=length//2
    matrix=[]
    letters=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]
    print(matrix)
    index=0
    subindex=0
    starting_letter=layers-1
    for i in range(0,length):
        matrix.append([])
        for x in range(0,length):
            matrix[i].append(letters[starting_letter])
    startindex=0
    i=1
    for b in range(1+startindex, length -i):
        for x in range(1+startindex,length-i):
            matrix[b][x]=matrix[b][x].replace(letters[starting_letter-startindex],letters[starting_letter-i])
        startindex+=1
        i+=1
        index+=1
        

            

    print(matrix)
if __name__ == "__main__":
    layers =3
    letter_square(layers)
        
def letter_square(layers:int):
    length=(layers*2)-1
    flip=length//2
    matrix=[]
    letters=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]
    starting_letter=layers-1
    for i in range(0,length):
        matrix.append([])
        for x in range(0,length):
            matrix[i].append(letters[starting_letter])
    startindex=0
    i=1
    miniindex=0
    aindex=1
    for t in range(1, length-1):

        for b in range(1+startindex,length-i):
            for x in range(1+miniindex, length -aindex):
                matrix[b][x]=matrix[b][x].replace(letters[starting_letter-miniindex],letters[starting_letter-aindex])
            startindex+=1
            i+=1
        miniindex+=1
        aindex+=1
    matrix[flip][flip]=matrix[flip][flip].replace("B","A")
            

    for r in matrix:
        string=""
        for c in r:
            string+=c
        print(string)



        
            


if __name__ == "__main__":
    layers =3
    letter_square(layers)
        
